version: "3.4"
services:

    redis:
      image: redis:alpine
      networks:
        - network-dev
    mysql:
      image: mysql:5.7
      user: mysql
      environment:
        - MYSQL_ROOT_PASSWORD=root456
        - MYSQL_DATABASE=cookking
        - MYSQL_USER=cookking
        - MYSQL_PASSWORD=cookking456
      ports:
        - "8082:3306"
      volumes:
          - ../data/mysql:/var/lib/mysql
      networks:
        - network-dev
### Nginx Container #########################################
    webserver:
      image: nginx:alpine
      working_dir: /var/www
      volumes:
          - ../projects/:/var/www
          - ./phpdocker/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./phpdocker/nginx/sites-available/:/etc/nginx/sites-available/
      ports:
       - "80:80"
       - "443:443"
      networks:
        - network-dev
### PHP-fpm Container #########################################
    app:
      build: phpdocker/php-fpm
      working_dir: /var/www
      volumes:
        - ../projects:/var/www
        - ./phpdocker/php-fpm/config/php-ini-overrides.ini:/usr/local/etc/php/conf.d/zz-overrides.ini
      networks:
        - network-dev
### PhpMyAdmin Container #########################################

    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      environment:
        - TZ=Europe/Zurich
        - PMA_ARBITRARY=1
        - MYSQL_USER=akal
        - MYSQL_PASSWORD=akal456
        - MYSQL_ROOT_PASSWORD=root456
      ports:
        - "8888:80"
      # depends_on:
      #   - "mysql"
      networks:
        - network-dev

### ElasticSearch Container #################################

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3
      volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
      #   - elasticsearch-plugins:/usr/share/elasticsearch/plugins
      environment:
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
        - "9200:9200"
        - "9300:9300"
      networks:
        - network-dev
### CERTBOT Container #################################
    certbot:
      image: certbot/certbot
      networks:
        - network-dev
#### WORKSPACE CONATINER ##############################
    workspace:
      image: phpdocker/workspace
      build:
        context: ./phpdocker/workspace
        dockerfile: Dockerfile
        args:
          - APP_CODE_PATH=/var/www/
          - APP_GROUP=ubuntu
          - APP_GROUP_ID=1000
          - APP_USER=ubuntu
          - APP_USER_ID=1000
          - TARGET_PHP_VERSION=7.2
          - TZ=Europe/Zurich
      volumes:
        - ../projects:/var/www
      networks:
        - network-dev
#############################################################
##########PORTAINER#########

    portainer:
        image: portainer/portainer
        ports:
            - '8000:8000'
            - '9000:9000'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - 'portainer_data:/data'
        networks:
        - network-dev
        
networks:
  agent_network:
    driver: bridge
  network-dev:
    driver: bridge
### Volumes Setup #############################################

volumes:
  elasticsearch-data:
    driver: "local"
  elasticsearch-plugins:
    driver: "local"
  portainer_data:
